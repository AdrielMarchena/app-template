# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_x64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
PCH = src/pch.h
PCH_PLACEHOLDER = $(OBJDIR)/$(notdir $(PCH))
GCH = $(PCH_PLACEHOLDER).gch
INCLUDES += -Isrc -Ivendor/glad/include -Ivendor/imgui -Ivendor/stb_image -Ivendor/spdlog/include -Ivendor/glm -Ivendor/debugbreak -Ivendor/lodepng
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_x64)
TARGETDIR = bin/Debug-windows-x86_64/Game
TARGET = $(TARGETDIR)/Game.exe
OBJDIR = bin-int/Debug-windows-x86_64/Game
DEFINES += -DGAME_WINDOWS_BUILD -DGAME_STATIC_BUILD -DGAME_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
LIBS += vendor/glfw/bin/Debug-windows-x86_64/GLFW/GLFW.lib vendor/stb_image/bin/Debug-windows-x86_64/stb_image/stb_image.lib vendor/glad/bin/Debug-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Debug-windows-x86_64/ImGui/ImGui.lib vendor/lodepng/bin/Debug-windows-x86_64/lodepng/lodepng.lib -lpthread  -ldl
LDDEPS += vendor/glfw/bin/Debug-windows-x86_64/GLFW/GLFW.lib vendor/stb_image/bin/Debug-windows-x86_64/stb_image/stb_image.lib vendor/glad/bin/Debug-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Debug-windows-x86_64/ImGui/ImGui.lib vendor/lodepng/bin/Debug-windows-x86_64/lodepng/lodepng.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),debug_x86)
TARGETDIR = bin/Debug-windows-x86/Game
TARGET = $(TARGETDIR)/Game.exe
OBJDIR = bin-int/Debug-windows-x86/Game
DEFINES += -DGAME_WINDOWS_BUILD -DGAME_STATIC_BUILD -DGAME_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -g -std=c++17
LIBS += vendor/glfw/bin/Debug-windows-x86/GLFW/GLFW.lib vendor/stb_image/bin/Debug-windows-x86/stb_image/stb_image.lib vendor/glad/bin/Debug-windows-x86/Glad/Glad.lib vendor/imgui/bin/Debug-windows-x86/ImGui/ImGui.lib vendor/lodepng/bin/Debug-windows-x86/lodepng/lodepng.lib -lpthread  -ldl
LDDEPS += vendor/glfw/bin/Debug-windows-x86/GLFW/GLFW.lib vendor/stb_image/bin/Debug-windows-x86/stb_image/stb_image.lib vendor/glad/bin/Debug-windows-x86/Glad/Glad.lib vendor/imgui/bin/Debug-windows-x86/ImGui/ImGui.lib vendor/lodepng/bin/Debug-windows-x86/lodepng/lodepng.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32

else ifeq ($(config),release_x64)
TARGETDIR = bin/Release-windows-x86_64/Game
TARGET = $(TARGETDIR)/Game.exe
OBJDIR = bin-int/Release-windows-x86_64/Game
DEFINES += -DGAME_WINDOWS_BUILD -DGAME_STATIC_BUILD -DGAME_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += vendor/glfw/bin/Release-windows-x86_64/GLFW/GLFW.lib vendor/stb_image/bin/Release-windows-x86_64/stb_image/stb_image.lib vendor/glad/bin/Release-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Release-windows-x86_64/ImGui/ImGui.lib vendor/lodepng/bin/Release-windows-x86_64/lodepng/lodepng.lib -lpthread  -ldl
LDDEPS += vendor/glfw/bin/Release-windows-x86_64/GLFW/GLFW.lib vendor/stb_image/bin/Release-windows-x86_64/stb_image/stb_image.lib vendor/glad/bin/Release-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Release-windows-x86_64/ImGui/ImGui.lib vendor/lodepng/bin/Release-windows-x86_64/lodepng/lodepng.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),release_x86)
TARGETDIR = bin/Release-windows-x86/Game
TARGET = $(TARGETDIR)/Game.exe
OBJDIR = bin-int/Release-windows-x86/Game
DEFINES += -DGAME_WINDOWS_BUILD -DGAME_STATIC_BUILD -DGAME_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -std=c++17
LIBS += vendor/glfw/bin/Release-windows-x86/GLFW/GLFW.lib vendor/stb_image/bin/Release-windows-x86/stb_image/stb_image.lib vendor/glad/bin/Release-windows-x86/Glad/Glad.lib vendor/imgui/bin/Release-windows-x86/ImGui/ImGui.lib vendor/lodepng/bin/Release-windows-x86/lodepng/lodepng.lib -lpthread  -ldl
LDDEPS += vendor/glfw/bin/Release-windows-x86/GLFW/GLFW.lib vendor/stb_image/bin/Release-windows-x86/stb_image/stb_image.lib vendor/glad/bin/Release-windows-x86/Glad/Glad.lib vendor/imgui/bin/Release-windows-x86/ImGui/ImGui.lib vendor/lodepng/bin/Release-windows-x86/lodepng/lodepng.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32 -s

else ifeq ($(config),dist_x64)
TARGETDIR = bin/Dist-windows-x86_64/Game
TARGET = $(TARGETDIR)/Game.exe
OBJDIR = bin-int/Dist-windows-x86_64/Game
DEFINES += -DGAME_WINDOWS_BUILD -DGAME_STATIC_BUILD -DGAME_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += vendor/glfw/bin/Dist-windows-x86_64/GLFW/GLFW.lib vendor/stb_image/bin/Dist-windows-x86_64/stb_image/stb_image.lib vendor/glad/bin/Dist-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Dist-windows-x86_64/ImGui/ImGui.lib vendor/lodepng/bin/Dist-windows-x86_64/lodepng/lodepng.lib -lpthread  -ldl
LDDEPS += vendor/glfw/bin/Dist-windows-x86_64/GLFW/GLFW.lib vendor/stb_image/bin/Dist-windows-x86_64/stb_image/stb_image.lib vendor/glad/bin/Dist-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Dist-windows-x86_64/ImGui/ImGui.lib vendor/lodepng/bin/Dist-windows-x86_64/lodepng/lodepng.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),dist_x86)
TARGETDIR = bin/Dist-windows-x86/Game
TARGET = $(TARGETDIR)/Game.exe
OBJDIR = bin-int/Dist-windows-x86/Game
DEFINES += -DGAME_WINDOWS_BUILD -DGAME_STATIC_BUILD -DGAME_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -std=c++17
LIBS += vendor/glfw/bin/Dist-windows-x86/GLFW/GLFW.lib vendor/stb_image/bin/Dist-windows-x86/stb_image/stb_image.lib vendor/glad/bin/Dist-windows-x86/Glad/Glad.lib vendor/imgui/bin/Dist-windows-x86/ImGui/ImGui.lib vendor/lodepng/bin/Dist-windows-x86/lodepng/lodepng.lib -lpthread  -ldl
LDDEPS += vendor/glfw/bin/Dist-windows-x86/GLFW/GLFW.lib vendor/stb_image/bin/Dist-windows-x86/stb_image/stb_image.lib vendor/glad/bin/Dist-windows-x86/Glad/Glad.lib vendor/imgui/bin/Dist-windows-x86/ImGui/ImGui.lib vendor/lodepng/bin/Dist-windows-x86/lodepng/lodepng.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Application.o
GENERATED += $(OBJDIR)/BusNode.o
GENERATED += $(OBJDIR)/Colide.o
GENERATED += $(OBJDIR)/Components.o
GENERATED += $(OBJDIR)/Entity.o
GENERATED += $(OBJDIR)/Files.o
GENERATED += $(OBJDIR)/Framebuffer.o
GENERATED += $(OBJDIR)/FramebufferRender.o
GENERATED += $(OBJDIR)/GLContext.o
GENERATED += $(OBJDIR)/GL_Commands.o
GENERATED += $(OBJDIR)/GL_Types.o
GENERATED += $(OBJDIR)/GameCamera.o
GENERATED += $(OBJDIR)/Generic.o
GENERATED += $(OBJDIR)/GlContext1.o
GENERATED += $(OBJDIR)/GlobalD.o
GENERATED += $(OBJDIR)/ImGuiLayer.o
GENERATED += $(OBJDIR)/IndexBuffer.o
GENERATED += $(OBJDIR)/Keyboard.o
GENERATED += $(OBJDIR)/Layer.o
GENERATED += $(OBJDIR)/LayerStack.o
GENERATED += $(OBJDIR)/Log.o
GENERATED += $(OBJDIR)/Main.o
GENERATED += $(OBJDIR)/Message.o
GENERATED += $(OBJDIR)/MessageBus.o
GENERATED += $(OBJDIR)/Mouse.o
GENERATED += $(OBJDIR)/MyGame.o
GENERATED += $(OBJDIR)/ParseArgs.o
GENERATED += $(OBJDIR)/Render2D.o
GENERATED += $(OBJDIR)/Scene.o
GENERATED += $(OBJDIR)/Shader.o
GENERATED += $(OBJDIR)/Texture.o
GENERATED += $(OBJDIR)/TextureSpecifications.o
GENERATED += $(OBJDIR)/UUID.o
GENERATED += $(OBJDIR)/VertexArray.o
GENERATED += $(OBJDIR)/VertexAttribute.o
GENERATED += $(OBJDIR)/VertexBuffer.o
GENERATED += $(OBJDIR)/WindowGlfw.o
GENERATED += $(OBJDIR)/pch.o
OBJECTS += $(OBJDIR)/Application.o
OBJECTS += $(OBJDIR)/BusNode.o
OBJECTS += $(OBJDIR)/Colide.o
OBJECTS += $(OBJDIR)/Components.o
OBJECTS += $(OBJDIR)/Entity.o
OBJECTS += $(OBJDIR)/Files.o
OBJECTS += $(OBJDIR)/Framebuffer.o
OBJECTS += $(OBJDIR)/FramebufferRender.o
OBJECTS += $(OBJDIR)/GLContext.o
OBJECTS += $(OBJDIR)/GL_Commands.o
OBJECTS += $(OBJDIR)/GL_Types.o
OBJECTS += $(OBJDIR)/GameCamera.o
OBJECTS += $(OBJDIR)/Generic.o
OBJECTS += $(OBJDIR)/GlContext1.o
OBJECTS += $(OBJDIR)/GlobalD.o
OBJECTS += $(OBJDIR)/ImGuiLayer.o
OBJECTS += $(OBJDIR)/IndexBuffer.o
OBJECTS += $(OBJDIR)/Keyboard.o
OBJECTS += $(OBJDIR)/Layer.o
OBJECTS += $(OBJDIR)/LayerStack.o
OBJECTS += $(OBJDIR)/Log.o
OBJECTS += $(OBJDIR)/Main.o
OBJECTS += $(OBJDIR)/Message.o
OBJECTS += $(OBJDIR)/MessageBus.o
OBJECTS += $(OBJDIR)/Mouse.o
OBJECTS += $(OBJDIR)/MyGame.o
OBJECTS += $(OBJDIR)/ParseArgs.o
OBJECTS += $(OBJDIR)/Render2D.o
OBJECTS += $(OBJDIR)/Scene.o
OBJECTS += $(OBJDIR)/Shader.o
OBJECTS += $(OBJDIR)/Texture.o
OBJECTS += $(OBJDIR)/TextureSpecifications.o
OBJECTS += $(OBJDIR)/UUID.o
OBJECTS += $(OBJDIR)/VertexArray.o
OBJECTS += $(OBJDIR)/VertexAttribute.o
OBJECTS += $(OBJDIR)/VertexBuffer.o
OBJECTS += $(OBJDIR)/WindowGlfw.o
OBJECTS += $(OBJDIR)/pch.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Game
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Game
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Colide.o: src/Colision/Colide.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GlobalD.o: src/Ecs/GlobalD.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Application.o: src/Entry/Application.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiLayer.o: src/Entry/ImGuiLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Layer.o: src/Entry/Layer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LayerStack.o: src/Entry/LayerStack.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ParseArgs.o: src/Entry/ParseArgs.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Keyboard.o: src/Input/Keyboard.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Mouse.o: src/Input/Mouse.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Log.o: src/Log/Log.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Main.o: src/Main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BusNode.o: src/Message/BusNode.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Message.o: src/Message/Message.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MessageBus.o: src/Message/MessageBus.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MyGame.o: src/MyLayer/MyGame.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Framebuffer.o: src/Render/GL/Framebuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FramebufferRender.o: src/Render/GL/FramebufferRender.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLContext.o: src/Render/GL/GLContext.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GL_Commands.o: src/Render/GL/GL_Commands.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GL_Types.o: src/Render/GL/GL_Types.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/IndexBuffer.o: src/Render/GL/IndexBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shader.o: src/Render/GL/Shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Texture.o: src/Render/GL/Texture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TextureSpecifications.o: src/Render/GL/TextureSpecifications.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexArray.o: src/Render/GL/VertexArray.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexAttribute.o: src/Render/GL/VertexAttribute.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexBuffer.o: src/Render/GL/VertexBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GameCamera.o: src/Render/GameCamera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Render2D.o: src/Render/Render2D.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Components.o: src/Scene/Components.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Entity.o: src/Scene/Entity.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Scene.o: src/Scene/Scene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/UUID.o: src/Scene/UUID.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Files.o: src/Utils/Files.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Generic.o: src/Utils/Generic.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GlContext1.o: src/Window/GLContext/GlContext.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WindowGlfw.o: src/Window/WindowGlfw.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pch.o: src/pch.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif